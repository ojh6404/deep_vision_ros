<launch>
  <arg name="ns" default="tracking_ros" />
  <arg name="device" default="cuda:0" />
  <arg name="mode" default="interactive" /> <!-- interactive, all, grounded, detic -->
  <arg name="num_slots" default="-1" />

  <!-- sam -->
  <arg name="model_type" default="vit_h_hq" /> <!-- vit_b, vit_l, vit_h ,vit_b_hq, vit_l_hq, vit_h_hq -->

  <!-- grounding dino -->
  <arg name="text_prompt"/>
  <arg name="box_threshold" default="0.35" />
  <arg name="text_threshold" default="0.25" />

  <!-- detic -->
  <arg name="host" default="localhost" />
  <arg name="vocabulary" default="lvis" />
  <arg name="custom_vocabulary" default="" />
  <arg name="detic_model" default="swin" />

  <arg name="tune" default="false"/>
  <arg name="mask" default="false"/>
  <arg name="compressed" default="true"/>
  <arg name="input_image" default="/kinect_head/rgb/image_rect_color"/>
  <arg name="decompressed_image" default="/$(arg ns)/decompressed_image"/>
  <arg name="input_point" default="/$(arg ns)/processed_image/screenpoint" />
  <arg name="input_bbox" default="/$(arg ns)/processed_image/screenrectangle" />
  <arg name="processed_image" default="/$(arg ns)/processed_image"/>
  <arg name="segmentation_image" default="/$(arg ns)/segmentation_image" />
  <arg name="masked_image" default="/$(arg ns)/masked_image"/>
  <arg name="prompt_image" default="/$(arg ns)/prompt_image" />
  <arg name="input_segmentation" default="/$(arg ns)/input_segmentation" />
  <arg name="output_segmentation" default="/$(arg ns)/segmentation" />


  <group ns="$(arg ns)">
    <group if="$(eval bool(tune))">
      <!-- process image and repub -->
      <node if="$(arg compressed)" name="raw_image_transport" pkg="image_transport" type="republish" args="compressed">
        <remap from="in" to="$(arg input_image)"/>
        <remap from="out" to="$(arg decompressed_image)"/>
      </node>
      <node unless="$(arg compressed)" name="raw_image_transport" pkg="image_transport" type="republish" args="raw">
        <remap from="in" to="$(arg input_image)"/>
        <remap from="out" to="$(arg decompressed_image)"/>
      </node>
      <node name="tune_image" pkg="tracking_ros" type="tune_node.py" output="screen">
        <remap from="~in" to="$(arg decompressed_image)"/>
        <remap from="~out" to="$(arg processed_image)"/>
        <rosparam subst_value="true" >
            config: $(find tracking_ros)/$(arg tune)
        </rosparam>
      </node>
    </group>

    <!-- process image and repub -->
    <group unless="$(eval bool(tune))">
      <node if="$(arg compressed)" name="raw_image_transport" pkg="image_transport" type="republish" args="compressed">
        <remap from="in" to="$(arg input_image)"/>
        <remap from="out" to="$(arg processed_image)"/>
      </node>
      <node unless="$(arg compressed)" name="raw_image_transport" pkg="image_transport" type="republish" args="raw">
        <remap from="in" to="$(arg input_image)"/>
        <remap from="out" to="$(arg processed_image)"/>
      </node>
    </group>

    <!-- grounded detection node -->
    <include if="$(eval mode=='grounded')"
             file="$(find tracking_ros)/launch/grounding_dino_node.launch" >
      <arg name="ns" value="$(arg ns)" />
      <arg name="model_type" value="$(arg model_type)" />
      <arg name="device" value="$(arg device)" />
      <arg name="text_prompt" value="$(arg text_prompt)" />
      <arg name="box_threshold" value="$(arg box_threshold)" />
      <arg name="text_threshold" value="$(arg text_threshold)" />
      <arg name="input_image" value="$(arg processed_image)"/>
      <arg name="input_segmentation" value="$(arg input_segmentation)" />
    </include>

    <!-- detic node -->
    <node if="$(eval mode=='detic')" pkg="tracking_ros" type="detic_ros.sh" name="detic_ros"
          args="$(find detic_ros)
                $(arg host)
                $(arg compressed)
                $(arg processed_image)
                $(arg detic_model)
                $(arg vocabulary)
                $(arg custom_vocabulary)"
          output="screen">
    </node>

    <!-- tracking node -->
    <include file="$(find tracking_ros)/launch/track_node.launch" >
      <arg name="ns" value="$(arg ns)" />
      <arg name="device" value="$(arg device)" />
      <arg name="mode" value="$(arg mode)" />
      <arg name="mask" value="$(arg mask)" />
      <arg name="input_image" value="$(arg processed_image)"/>
      <arg name="input_segmentation" value="$(arg input_segmentation)" />
      <arg name="output_image" value="$(arg segmentation_image)"/>
      <arg name="output_segmentation" value="$(arg output_segmentation)" />
      <arg name="masked_image" value="$(arg masked_image)"/>
    </include>

    <!-- interactive prompter -->
    <group if="$(eval mode=='interactive')">
      <node name="image_view2" pkg="image_view2" type="image_view2" output="screen" >
        <remap from="image" to="$(arg processed_image)" />
        <param name="use_window" value="false" />
      </node>
      <node  pkg="jsk_rqt_plugins" type="rqt_image_view2" name="prompter"
            output="screen">
        <remap from="event" to="image_view2/event" />
        <remap from="image_marked" to="image_marked" />
      </node>
      <node name="prompter_button"
            pkg="jsk_rqt_plugins" type="rqt_tabbed_buttons" output="screen" clear_params="true">
        <rosparam command="load" file="$(find tracking_ros)/resource/remote_tabbed_layout.yaml" />
      </node>

      <!-- visualize segmentation -->
      <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
      <remap from="image" to="$(arg prompt_image)" />
      </node>
    </group>
  </group>
</launch>
